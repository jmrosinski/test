#include "./gptl.h"
#include <string.h>

#define gptlstart gptlstart_
#define gptlstop gptlstop_
#define gptlcudadevsync gptlcudadevsync_

// Local function prototypes: Everything callable by Fortran requires C linkage
#ifdef __cplusplus
extern "C" {
#endif

int gptlstart (char *name, int nc);
int gptlstop (char *name, int nc);
int gptlcudadevsync (void);

int gptlstart (char *name, int nc)
{
  char cname[nc+1];
  // Check for name already null-terminated for efficiency
  if (name[nc-1] == '\0') {
    return GPTLstart (name);
  } else {
    strncpy (cname, name, nc);
    cname[nc] = '\0';
    return GPTLstart (cname);
  }
}

int gptlstop (char *name, int nc)
{
  char cname[nc+1];
  // Check for name already null-terminated for efficiency
  if (name[nc-1] == '\0') {
    return GPTLstop (name);
  } else {
    strncpy (cname, name, nc);
    cname[nc] = '\0';
    return GPTLstop (cname);
  }
}

int gptlcudadevsync (void)
{
  return GPTLcudadevsync ();
}

#ifdef __cplusplus
}
#endif
